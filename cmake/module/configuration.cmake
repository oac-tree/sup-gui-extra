# Project main configuration

include(CTest)
include(GenerateExportHeader)
include(GNUInstallDirs)
include(FindPackageMessage)
include(COASetupQt)

# -----------------------------------------------------------------------------
# CODAC environment
# -----------------------------------------------------------------------------
if(NOT COA_NO_CODAC)
  find_package(CODAC MODULE QUIET)
endif()

if(CODAC_FOUND)
  set(CODAC_FOUND_MESSAGE "Building with CODAC")

  # Append CODAC_CMAKE_PREFIXES to cmake seard directories, this helps cmake find packages installed in the CODAC enviorenment
  list(APPEND CMAKE_PREFIX_PATH ${CODAC_CMAKE_PREFIXES})

  # Check if operating inside a CODAC CICD system
  if(CODAC_CICD)
    string(APPEND CODAC_FOUND_MESSAGE " CICD environment")
  else()
    string(APPEND CODAC_FOUND_MESSAGE " environment")
  endif()

  if(CODAC_DOCS)
    string(APPEND CODAC_FOUND_MESSAGE " and will build documentation")

    set(COA_BUILD_DOCUMENTATION ON)
  endif()

  find_package_message(
    CODAC_DETAILS
    "${CODAC_FOUND_MESSAGE}: ${CODAC_DIR} (version \"${CODAC_VERSION}\")"
    "[${CODAC_FOUND}][${CODAC_DIR}][${CODAC_CICD}][v${CODAC_VERSION}]"
  )
else()
  find_package_message(CODAC_DETAILS "Building without CODAC environment" "[${CODAC_FOUND}]")
endif()

# -----------------------------------------------------------------------------
# Variables
# -----------------------------------------------------------------------------
get_filename_component(SUP_GUI_EXTRA_PROJECT_DIR "${CMAKE_CURRENT_LIST_DIR}/../.." ABSOLUTE)

set(SUP_GUI_EXTRA_SOVERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR})
set(SUP_GUI_EXTRA_BUILDVERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})
set(SUP_GUI_EXTRA_TESTOUTPUT_DIR ${CMAKE_BINARY_DIR}/test_output_mvvm)

# -----------------------------------------------------------------------------
# Directories
# -----------------------------------------------------------------------------

# directory for autogenerated configs
set(SUP_GUI_EXTRA_AUTOGEN_DIR ${CMAKE_BINARY_DIR}/autogen/sup_gui_extra)
file(MAKE_DIRECTORY ${SUP_GUI_EXTRA_AUTOGEN_DIR})

# -----------------------------------------------------------------------------
# Dependencies
# -----------------------------------------------------------------------------
find_package(Threads)
